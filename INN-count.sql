-- Lab 6 - INN
-- azaharia@calpoly.edu
-- Jun 1, 2023

-- Query 1
-- For each room report the total revenue for all stays and the average revenue
-- per stay generated by stays in the room that originated in the months of June, July, and August (combined).
-- Sort output in descending order by total revenue. (Output full room names).

SELECT rm.RoomName, SUM(r.Rate * DATEDIFF(r.Checkout, r.CheckIn)) AS Revenue, AVG(r.Rate * DATEDIFF(r.Checkout, r.CheckIn)) AS AvgRevPerStay
FROM reservations r, rooms rm
WHERE MONTH(r.CheckIn) IN (6, 7, 8)
    AND r.Room = rm.RoomCode
GROUP BY rm.RoomName
ORDER BY Revenue DESC;

-- Query 2
-- Report the total number of reservations in 2010 that commenced on Mondays  
-- and ended on Saturdays and the total revenue they brought in.

SELECT COUNT(*) AS '# Reservations', SUM(Rate * DATEDIFF(CheckOut, CheckIn)) AS Revenue
FROM reservations
WHERE YEAR(CheckIn) = 2010
    AND YEAR(CheckOut) = 2010
    AND DAYOFWEEK(CheckIn) = 2
    AND DAYOFWEEK(CheckOut) = 7;

-- Query 3
-- For each day of the week, report the total number of reservations  longer than five (5) days that commenced on it and the total revenue these reservations brought. Report days of week
-- as Monday, Tuesday, etc.  Sort output by day of week (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)
-- (NOTE: this query is a bit nasty, but is very doable. You may need the built-in MOD() function)

SELECT
    CASE WEEKDAY(CheckIn)
        WHEN 0 THEN 'Monday'
        WHEN 1 THEN 'Tuesday'
        WHEN 2 THEN 'Wednesday'
        WHEN 3 THEN 'Thursday'
        WHEN 4 THEN 'Friday'
        WHEN 5 THEN 'Saturday'
        WHEN 6 THEN 'Sunday'
    END AS DayOfWeek, COUNT(*) AS Reservations, SUM(Rate * DATEDIFF(CheckOut, CheckIn)) AS Revenue
FROM reservations
WHERE DATEDIFF(CheckOut, CheckIn) > 5
GROUP BY DayOfWeek
ORDER BY FIELD(DayOfWeek, 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');

-- Query 4
--  For each room report the total number of people who stayed in it in 2010 (all reservations that started in 2010).
-- Report full names of the rooms, sort in descending order by the total number of people.

SELECT ro.RoomName, SUM(res.Adults + res.Kids) AS People
FROM reservations res
JOIN rooms ro ON res.Room = ro.RoomCode
WHERE YEAR(res.CheckIn) = 2010
GROUP BY ro.RoomName
ORDER BY People DESC;

-- Query 5
--  For each room report how many nights in 2010 the room was occupied.
-- Report the room code, the full name of the room and the number of occupied nights. Sort in descending order by occupied nights.

SELECT r.RoomCode, r.RoomName, SUM(DATEDIFF(
        LEAST(res.CheckOut, '2010-12-31'),
        GREATEST(res.CheckIn, '2009-12-31')
    ) * SIGN(DATEDIFF(res.CheckOut, res.CheckIn))) AS Nights
FROM rooms r, reservations res
WHERE r.RoomCode = res.Room
    AND res.CheckIn <= '2010-12-31' 
    AND res.CheckOut >= '2010-01-01'
GROUP BY r.RoomCode, r.RoomName
ORDER BY Nights DESC;


